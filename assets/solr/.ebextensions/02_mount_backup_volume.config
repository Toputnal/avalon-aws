packages:
  yum:
    nfs-utils: []
files:
  "/home/ec2-user/mount_backup.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      config=$(cat /opt/elasticbeanstalk/deploy/configuration/containerconfiguration | jq -r '.optionsettings | {"aws:elasticbeanstalk:application:environment"}[][]')
      for var in $config; do eval $var; done

      mkdir -p /var/app/solr-backup
      mountpoint -q /var/app/solr-backup
      if [ $? -ne 0 ]; then
        mount -t nfs4 ${BACKUP_VOLUME}:/ /var/app/solr-backup/
        service docker restart
        existing=$(docker ps -qa --filter "name=^/ecs-agent$")
        if [ -n $existing ]; then
          docker rm $existing
        fi
        docker run --name ecs-agent --detach=true --restart=on-failure:10 --volume=/var/run:/var/run \
          --volume=/var/log/ecs/:/log --volume=/var/lib/ecs/data:/data --volume=/etc/ecs:/etc/ecs \
          --net=host --env-file=/etc/ecs/ecs.config amazon/amazon-ecs-agent:latest
      fi
      chown 8983:8983 /var/app/solr-backup
commands:
  01_stopdocker:
    command: "sudo stop ecs > /dev/null 2>&1 || /bin/true && sudo service docker stop"
  02_killallnetworkbindings:
    command: 'sudo killall docker > /dev/null 2>&1 || /bin/true'
  03_removenetworkinterface:
    command: "rm -f /var/lib/docker/network/files/local-kv.db"
    test: test -f /var/lib/docker/network/files/local-kv.db
  04_mount:
    command: "/home/ec2-user/mount_backup.sh"
  # On new instances, delay needs to be added because of 00task enact script. It tests for start/ but it can be various states of start...
  # Basically, "start ecs" takes some time to run, and it runs async - so we sleep for some time.
  # So basically let the ECS manager take it's time to boot before going on to enact scritps and post deploy scripts.
  09_restart:
    command: "service docker start && sudo start ecs && sleep 120s"
